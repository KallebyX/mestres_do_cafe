name: 🚀 Deploy Mestres do Café

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: 🧪 Executar Testes
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Instalar dependências frontend
      run: npm ci
      
    - name: 📦 Instalar dependências backend
      run: cd server && npm ci
      
    - name: 🧪 Executar testes frontend
      run: npm test -- --run
      
    - name: 🧪 Executar testes backend
      run: cd server && npm test
      
    - name: 📊 Verificar cobertura
      run: npm run test:coverage

  build:
    name: 🏗️ Build para Produção
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Instalar dependências
      run: npm ci
      
    - name: 🏗️ Build do projeto
      run: npm run build
      
    - name: 📊 Analisar bundle
      run: npm run build:analyze
      
    - name: 📤 Upload do build
      uses: actions/upload-artifact@v3
      with:
        name: dist-files
        path: dist/

  deploy:
    name: 🚀 Deploy para GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Instalar dependências
      run: npm ci
      
    - name: 🏗️ Build para produção
      run: npm run build
      env:
        VITE_API_URL: https://mestres-cafe-api.render.com
        VITE_APP_NAME: Mestres do Café
        VITE_CONTACT_PHONE: +5555996458600
        
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v3
      
    - name: 📤 Upload para Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: './dist'
        
    - name: 🚀 Deploy para GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  lighthouse:
    name: 🔍 Lighthouse Performance
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4
      
    - name: 🔍 Executar Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          https://${{ github.repository_owner }}.github.io/mestres_do_cafe/
        uploadArtifacts: true
        temporaryPublicStorage: true

  security:
    name: 🔒 Verificação de Segurança
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout do código
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 🔒 Executar npm audit
      run: npm audit --audit-level moderate
      
    - name: 🔒 Verificar dependências (frontend)
      run: npm audit --production
      
    - name: 🔒 Verificar dependências (backend)
      run: cd server && npm audit --production

  notify:
    name: 📢 Notificação de Deploy
    runs-on: ubuntu-latest
    needs: [deploy, lighthouse]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: 📢 Notificar sucesso
      if: needs.deploy.result == 'success' && needs.lighthouse.result == 'success'
      run: |
        echo "🎉 Deploy realizado com sucesso!"
        echo "✅ Frontend: https://${{ github.repository_owner }}.github.io/mestres_do_cafe/"
        echo "✅ Testes: ${{ needs.test.result }}"
        echo "✅ Build: ${{ needs.build.result }}"
        echo "✅ Performance: Verificada pelo Lighthouse"
        
    - name: 📢 Notificar falha
      if: needs.deploy.result == 'failure' || needs.lighthouse.result == 'failure'
      run: |
        echo "❌ Deploy falhou!"
        echo "📊 Status dos jobs:"
        echo "- Testes: ${{ needs.test.result }}"
        echo "- Build: ${{ needs.build.result }}"
        echo "- Deploy: ${{ needs.deploy.result }}"
        echo "- Lighthouse: ${{ needs.lighthouse.result }}" 