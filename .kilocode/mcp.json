{
  "mcpServers": {
    "filesystem": {
      "command": "npx",
      "args": [
        "@modelcontextprotocol/server-filesystem",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise"
      ],
      "description": "Operações de arquivo seguras para o projeto Mestres do Café",
      "allowedPaths": [
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/apps",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/packages",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/tests",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/docs",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/tools"
      ],
      "deniedPaths": [
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/.env",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/.env.local",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/node_modules",
        "/Users/kalleby/Downloads/mestres_cafe_enterprise/.git"
      ],
      "alwaysAllow": [
        "read_file",
        "read_multiple_files",
        "write_file",
        "edit_file",
        "create_directory",
        "list_directory",
        "list_directory_with_sizes",
        "directory_tree",
        "move_file",
        "search_files",
        "get_file_info",
        "list_allowed_directories"
      ],
      "customTools": {
        "find_react_components": {
          "description": "Encontrar componentes React no projeto",
          "searchPaths": ["apps/web/src/components", "packages/ui/src/components"],
          "fileExtensions": [".tsx", ".jsx"],
          "includeTests": true
        },
        "find_api_routes": {
          "description": "Encontrar rotas da API Flask",
          "searchPaths": ["apps/api/src/controllers/routes"],
          "fileExtensions": [".py"],
          "includeDocstrings": true
        },
        "find_database_models": {
          "description": "Encontrar modelos do banco de dados",
          "searchPaths": ["apps/api/src/models"],
          "fileExtensions": [".py"],
          "includeRelationships": true
        },
        "scan_project_structure": {
          "description": "Escanear estrutura do projeto para análise arquitetural",
          "includePaths": ["apps", "packages", "tests"],
          "excludePatterns": ["node_modules", "*.log", "*.env*", "__pycache__"]
        }
      },
      "resources": {
        "project_files": {
          "description": "Arquivos do projeto organizados por tipo",
          "categories": {
            "components": "apps/web/src/components/**/*.{tsx,jsx}",
            "pages": "apps/web/src/pages/**/*.{tsx,jsx}",
            "api_routes": "apps/api/src/controllers/routes/**/*.py",
            "models": "apps/api/src/models/**/*.py",
            "services": "apps/api/src/services/**/*.py",
            "tests": "tests/**/*.{py,ts,tsx}"
          }
        },
        "documentation": {
          "description": "Documentação do projeto",
          "paths": ["docs/**/*.md", "README.md", "*.md"]
        }
      },
      "watchPatterns": [
        "apps/web/src/**/*.{ts,tsx}",
        "apps/api/src/**/*.py",
        "packages/*/src/**/*.{ts,tsx}"
      ]
    },
    "postgres": {
      "command": "npx",
      "args": [
        "@modelcontextprotocol/server-postgres",
        "postgresql://localhost:5432/mestres_cafe_dev"
      ],
      "description": "Operações de banco PostgreSQL para Mestres do Café",
      "env": {
        "POSTGRES_HOST": "localhost",
        "POSTGRES_PORT": "5432",
        "POSTGRES_DB": "mestres_cafe_dev"
      },
      "alwaysAllow": [
        "query",
        "list_tables",
        "describe_table",
        "list_schemas"
      ],
      "customQueries": {
        "get_product_analytics": {
          "description": "Obter análises de produtos para dashboard",
          "query": "SELECT p.name, p.price, COUNT(oi.id) as sales_count, SUM(oi.quantity * oi.price) as total_revenue FROM products p LEFT JOIN order_items oi ON p.id = oi.product_id GROUP BY p.id ORDER BY total_revenue DESC LIMIT 10",
          "parameters": []
        },
        "get_customer_segments": {
          "description": "Segmentar clientes por valor de compra",
          "query": "SELECT customer_id, SUM(total_amount) as total_spent, COUNT(*) as order_count, CASE WHEN SUM(total_amount) > 1000 THEN 'Premium' WHEN SUM(total_amount) > 500 THEN 'Regular' ELSE 'Basic' END as segment FROM orders GROUP BY customer_id",
          "parameters": []
        },
        "get_inventory_status": {
          "description": "Status do estoque com alertas",
          "query": "SELECT p.name, s.current_stock, s.min_stock, s.max_stock, CASE WHEN s.current_stock <= s.min_stock THEN 'LOW' WHEN s.current_stock >= s.max_stock THEN 'HIGH' ELSE 'OK' END as status FROM products p JOIN stock s ON p.id = s.product_id ORDER BY s.current_stock ASC",
          "parameters": []
        },
        "get_sales_trends": {
          "description": "Tendências de vendas por período",
          "query": "SELECT DATE_TRUNC('month', created_at) as month, COUNT(*) as order_count, SUM(total_amount) as total_revenue FROM orders WHERE created_at >= $1 GROUP BY month ORDER BY month",
          "parameters": ["start_date"]
        }
      },
      "businessRules": {
        "coffee_specific": {
          "roast_levels": ["Light", "Medium", "Dark", "Extra Dark"],
          "origin_countries": ["Brazil", "Colombia", "Ethiopia", "Guatemala", "Jamaica"],
          "processing_methods": ["Washed", "Natural", "Honey", "Pulped Natural"],
          "grind_sizes": ["Whole Bean", "Coarse", "Medium", "Fine", "Extra Fine"]
        },
        "inventory_rules": {
          "min_stock_alert": 10,
          "max_stock_limit": 1000,
          "reorder_point_formula": "average_daily_sales * lead_time_days * safety_factor"
        }
      },
      "resources": {
        "database_schema": {
          "description": "Schema do banco de dados do projeto",
          "tables": ["products", "orders", "customers", "inventory", "stock", "suppliers"]
        },
        "business_metrics": {
          "description": "Métricas de negócio para dashboards",
          "kpis": ["revenue", "orders", "customers", "inventory_turnover", "customer_ltv"]
        }
      }
    },
    "sequential-thinking": {
      "command": "npx",
      "args": [
        "@modelcontextprotocol/server-sequential-thinking"
      ],
      "description": "Servidor de pensamento sequencial para resolução de problemas",
      "config": {
        "maxThoughts": 50,
        "enableReflection": true,
        "autoSynthesize": true,
        "thoughtCategories": [
          "architecture-analysis",
          "business-logic",
          "performance-optimization",
          "security-review",
          "user-experience",
          "data-modeling"
        ]
      },
      "alwaysAllow": [
        "sequentialthinking"
      ],
      "thinkingPatterns": {
        "coffee_business_analysis": {
          "description": "Padrão de análise específico para negócio de café",
          "steps": [
            "Analisar requisitos do negócio de café",
            "Considerar sazonalidade e características do produto",
            "Avaliar impacto no estoque e fornecedores",
            "Verificar conformidade com regulamentações",
            "Analisar experiência do cliente",
            "Sintetizar solução final"
          ]
        },
        "ecommerce_feature_design": {
          "description": "Padrão para design de features de e-commerce",
          "steps": [
            "Identificar necessidades do usuário",
            "Mapear jornada do cliente",
            "Projetar arquitetura da solução",
            "Considerar integrações necessárias",
            "Planejar testes e validação",
            "Definir métricas de sucesso"
          ]
        },
        "performance_troubleshooting": {
          "description": "Padrão para resolução de problemas de performance",
          "steps": [
            "Identificar sintomas de performance",
            "Coletar métricas e dados",
            "Analisar gargalos potenciais",
            "Priorizar otimizações",
            "Implementar melhorias",
            "Validar resultados"
          ]
        }
      },
      "contextTemplates": {
        "react_component_review": {
          "description": "Template para revisão de componentes React",
          "context": "Projeto: Mestres do Café Enterprise\nArquitetura: React + TypeScript + Vite\nPadrões: Clean Components, Hooks, Props Interface\nConsiderações: Performance, Acessibilidade, Reutilização"
        },
        "api_endpoint_design": {
          "description": "Template para design de endpoints da API",
          "context": "Projeto: Mestres do Café Enterprise\nArquitetura: Flask + SQLAlchemy + PostgreSQL\nPadrões: RESTful, Clean Architecture, Type Hints\nConsiderações: Segurança, Performance, Documentação"
        },
        "database_modeling": {
          "description": "Template para modelagem de banco de dados",
          "context": "Projeto: Mestres do Café Enterprise\nBanco: PostgreSQL + SQLAlchemy ORM\nDomínio: E-commerce de café, ERP, CRM\nConsiderações: Normalização, Índices, Constraints, Auditoria"
        }
      }
    },
    "mestres-cafe-business": {
      "command": "node",
      "args": [
        "tools/mcp/mestres-cafe-business-server.js"
      ],
      "description": "Servidor MCP personalizado para regras de negócio específicas do Mestres do Café",
      "alwaysAllow": [
        "calculate_roast_profile",
        "optimize_inventory",
        "calculate_pricing",
        "generate_business_report",
        "validate_coffee_specs",
        "calculate_shipping_cost"
      ],
      "businessTools": {
        "roast_calculator": {
          "description": "Calcular perfil de torra baseado em especificações",
          "inputs": ["green_weight", "roast_level", "bean_origin", "moisture_content"],
          "outputs": ["roasted_weight", "roast_time", "temperature_profile", "loss_percentage"]
        },
        "inventory_optimizer": {
          "description": "Otimizar níveis de estoque baseado em sazonalidade",
          "inputs": ["product_id", "current_stock", "sales_history", "season"],
          "outputs": ["recommended_stock", "reorder_point", "order_quantity"]
        },
        "price_calculator": {
          "description": "Calcular preços com margem e competitividade",
          "inputs": ["cost_price", "category", "competitor_prices", "margin_target"],
          "outputs": ["suggested_price", "margin_percentage", "competitiveness_score"]
        },
        "quality_validator": {
          "description": "Validar especificações de qualidade do café",
          "inputs": ["cupping_score", "bean_size", "defect_count", "moisture_level"],
          "outputs": ["quality_grade", "price_adjustment", "storage_recommendations"]
        }
      },
      "integrations": {
        "weather_service": {
          "description": "Integração com serviço de clima para análise de sazonalidade",
          "endpoint": "https://api.weather.com/v1/current",
          "useFor": ["inventory_planning", "shipping_optimization"]
        },
        "logistics_service": {
          "description": "Integração com Melhor Envio para cálculo de fretes",
          "endpoint": "https://api.melhorenvio.com.br/v2",
          "useFor": ["shipping_calculator", "delivery_tracking"]
        }
      }
    }
  },
  "projectContext": {
    "name": "Mestres do Café Enterprise",
    "type": "monorepo",
    "description": "Sistema enterprise de e-commerce e ERP para torrefação de cafés especiais",
    "architecture": {
      "frontend": "React + TypeScript + Vite",
      "backend": "Flask + Python + SQLAlchemy",
      "database": "PostgreSQL + Redis"
    },
    "codeStandards": {
      "typescript": {
        "strict": true,
        "noImplicitAny": true
      },
      "python": {
        "typeHints": true,
        "formatting": "black"
      }
    },
    "customCommands": {
      "generate_api_documentation": {
        "description": "Gerar documentação da API automaticamente",
        "command": "python -m apps.api.tools.generate_docs",
        "outputPath": "docs/api/"
      },
      "run_full_test_suite": {
        "description": "Executar suíte completa de testes",
        "command": "make test-all",
        "coverage": true
      },
      "analyze_code_quality": {
        "description": "Analisar qualidade do código",
        "command": "make lint && make type-check",
        "generateReport": true
      },
      "check_security_vulnerabilities": {
        "description": "Verificar vulnerabilidades de segurança",
        "command": "make security-check",
        "outputFormat": "json"
      }
    },
    "integrations": {
      "coffee_business_tools": {
        "roast_calculator": {
          "description": "Calculadora de torra de café",
          "parameters": ["green_weight", "roast_level", "loss_percentage"]
        },
        "inventory_optimizer": {
          "description": "Otimizador de estoque baseado em sazonalidade",
          "parameters": ["product_id", "season", "historical_data"]
        },
        "price_calculator": {
          "description": "Calculadora de preços com margem",
          "parameters": ["cost_price", "margin_percentage", "competitor_prices"]
        }
      },
      "external_apis": {
        "weather_api": {
          "description": "API de clima para análise de sazonalidade",
          "endpoint": "https://api.weather.com/v1/current"
        },
        "currency_api": {
          "description": "API de câmbio para preços internacionais",
          "endpoint": "https://api.exchangerate-api.com/v4/latest"
        },
        "logistics_api": {
          "description": "API de logística para cálculo de fretes",
          "endpoint": "https://api.melhorenvio.com.br/v2"
        }
      }
    }
  }
}